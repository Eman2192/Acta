<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Formulario de Pago</title>

  <!-- Estilos gob.mx -->
  <link rel="stylesheet" href="https://framework-gb.cdn.gob.mx/assets/styles/main.css">
  <script src="https://framework-gb.cdn.gob.mx/gobmx.js"></script>

  <style>
    .small-error { display:none; color:#a94442; margin-top:6px; }
    .has-error input { border-color: #a94442; }
    .card-logo { width:40px; height:auto; position:absolute; right:10px; top:32px; }
    .position-relative { position:relative; }
  </style>
</head>
<body>

<header>
  <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    <div class="container">
      <div class="navbar-header">
        <a class="navbar-brand" href="https://www.gob.mx/">gob.mx</a>
      </div>
    </div>
  </div>
</header>

<main role="main" class="container" style="margin-top:80px;">
  <div class="row">
    <div class="col-md-6 col-md-offset-3">

      <!-- Banner de error -->
      <div id="mensaje" class="alert alert-danger text-center" style="display:none;">
        ❌ Error al procesar el pago. Intente nuevamente.
      </div>

      <h2 class="text-center">Formulario de Pago</h2>
      <form id="pagoForm" novalidate>
        <div class="form-group position-relative" id="groupTarjeta">
          <label for="tarjeta">Número de tarjeta</label>
          <input type="text" class="form-control" id="tarjeta" placeholder="0000 0000 0000 0000" maxlength="23" required>
          <img id="cardLogo" class="card-logo" style="display:none;" src="">
          <small class="small-error" id="errorTarjeta">La tarjeta debe tener 15 o 16 dígitos.</small>
          <small class="small-error" id="errorTarjetaLuhn">Tarjeta no válida.</small>
        </div>

        <div class="form-group" id="groupVencimiento">
          <label for="vencimiento">Fecha de vencimiento</label>
          <input type="text" class="form-control" id="vencimiento" placeholder="MM/AA" maxlength="5" required>
          <small class="small-error" id="errorVencimiento">Fecha inválida o vencida.</small>
        </div>

        <div class="form-group" id="groupCVV">
          <label for="cvv">CVV</label>
          <input type="password" class="form-control" id="cvv" placeholder="123" maxlength="4" required>
          <small class="small-error" id="errorCVV">El CVV debe tener 3 o 4 dígitos.</small>
        </div>

        <button type="submit" class="btn btn-primary btn-block">Pagar</button>
      </form>

    </div>
  </div>
</main>

<footer class="main-footer">
  <div class="container">
    <div class="row">
      <div class="col-sm-6">
        <p>© 2025 Gobierno de México</p>
      </div>
      <div class="col-sm-6 text-right">
        <p>www.gob.mx</p>
      </div>
    </div>
  </div>
</footer>

<script>
  const onlyDigits = s => s.replace(/\D/g, '');

  function luhnValid(numberString) {
    const digits = numberString.split('').reverse().map(d => parseInt(d, 10));
    let sum = 0;
    for (let i = 0; i < digits.length; i++) {
      let d = digits[i];
      if (i % 2 === 1) { d *= 2; if (d > 9) d -= 9; }
      sum += d;
    }
    return (sum % 10) === 0;
  }

  const tarjetaEl = document.getElementById('tarjeta');
  const cardLogoEl = document.getElementById('cardLogo');

  tarjetaEl.addEventListener('input', (e) => {
    let raw = onlyDigits(e.target.value).slice(0,16);
    const parts = [];
    for (let i=0;i<raw.length;i+=4) parts.push(raw.substr(i,4));
    e.target.value = parts.join(' ');
    hideCardErrors();
    detectCardBrand(raw);
  });

  const expiryEl = document.getElementById('vencimiento');
  expiryEl.addEventListener('input', (e) => {
    const v = onlyDigits(e.target.value).slice(0,4);
    e.target.value = v.length >=3 ? v.slice(0,2)+'/'+v.slice(2) : v;
    hideExpiryError();
  });

  const cvvEl = document.getElementById('cvv');
  cvvEl.addEventListener('input', (e) => {
    e.target.value = onlyDigits(e.target.value).slice(0,4);
    hideCVVError();
  });

  function show(elId) { document.getElementById(elId).style.display = 'block'; }
  function hide(elId) { document.getElementById(elId).style.display = 'none'; }
  function addErrorClass(groupId) { document.getElementById(groupId).classList.add('has-error'); }
  function removeErrorClass(groupId) { document.getElementById(groupId).classList.remove('has-error'); }

  function hideCardErrors() { hide('errorTarjeta'); hide('errorTarjetaLuhn'); removeErrorClass('groupTarjeta'); }
  function hideExpiryError() { hide('errorVencimiento'); removeErrorClass('groupVencimiento'); }
  function hideCVVError() { hide('errorCVV'); removeErrorClass('groupCVV'); }

  function validateCard() {
    const rawDigits = onlyDigits(tarjetaEl.value);
    if (!(rawDigits.length===15 || rawDigits.length===16)) { show('errorTarjeta'); addErrorClass('groupTarjeta'); return false; }
    if (!luhnValid(rawDigits)) { show('errorTarjetaLuhn'); addErrorClass('groupTarjeta'); return false; }
    return true;
  }

  function validateExpiry() {
    const val = expiryEl.value;
    const regexFecha = /^(0[1-9]|1[0-2])\/\d{2}$/;
    if (!regexFecha.test(val)) { show('errorVencimiento'); addErrorClass('groupVencimiento'); return false; }
    const partes = val.split('/');
    const mes = parseInt(partes[0],10);
    const anio = parseInt('20'+partes[1],10);
    const hoy = new Date();
    if (anio < hoy.getFullYear() || (anio===hoy.getFullYear() && mes<(hoy.getMonth()+1))) {
      show('errorVencimiento'); addErrorClass('groupVencimiento'); return false;
    }
    return true;
  }

  function validateCVV() {
    const cvv = onlyDigits(cvvEl.value);
    if (!/^\d{3,4}$/.test(cvv)) { show('errorCVV'); addErrorClass('groupCVV'); return false; }
    return true;
  }

  document.getElementById('pagoForm').addEventListener('submit', function(e) {
    e.preventDefault();
    hide('mensaje'); hideCardErrors(); hideExpiryError(); hideCVVError();

    const okCard = validateCard();
    const okExpiry = validateExpiry();
    const okCVV = validateCVV();

    if (!okCard || !okExpiry || !okCVV) {
      const firstError = document.querySelector('.has-error');
      if (firstError) firstError.scrollIntoView({behavior:'smooth',block:'center'});
      return;
    }

    show('mensaje');
    window.scrollTo({ top:0, behavior:'smooth' });
  });

  // Detecta la marca y muestra logo
  function detectCardBrand(number) {
    let logo = '';
    if (/^4/.test(number)) logo = 'https://upload.wikimedia.org/wikipedia/commons/5/5e/Visa_Inc._logo.svg'; // Visa
    else if (/^(5[1-5]|2(2[2-9]|[3-7]\d))/.test(number)) logo = 'https://upload.wikimedia.org/wikipedia/commons/2/2a/Mastercard-logo.svg'; // Mastercard
    else if (/^3[47]/.test(number)) logo = 'https://upload.wikimedia.org/wikipedia/commons/3/30/American_Express_logo_%282018%29.svg'; // AMEX

    if(logo) { cardLogoEl.src = logo; cardLogoEl.style.display = 'block'; }
    else { cardLogoEl.style.display = 'none'; }
  }
</script>

</body>
</html>
